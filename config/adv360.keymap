#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO


        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        c_ul: c_ul {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp LEFT>;
            label = "C_UL";
        };

        c_ur: c_ur {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp RIGHT>;
            label = "C_UR";
        };

        c_dl: c_dl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN_ARROW &kp LEFT>;
            label = "C_DL";
        };

        c_dr: c_dr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN_ARROW &kp RIGHT>;
            label = "C_DR";
        };

        hoplophobe: hoplophobe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(H) &kp O &kp P &kp L &kp O &kp P &kp H &kp O &kp B &kp E &kp N1 &kp EXCL &kp RET>;
            label = "HOPLOPHOBE";
        };

        aumlautu: aumlautu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(A)) &kp COLON>;
            label = "AUMLAUTU";
        };

        aumlautl: aumlautl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A) &kp COLON>;
            label = "AUMLAUTL";
        };

        ss: ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(S) &kp S>;
            label = "SS";
        };

        oumlautl: oumlautl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(O) &kp COLON>;
            label = "OUMLAUTL";
        };

        uumlautl: uumlautl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(U) &kp COLON>;
            label = "UUMLAUTL";
        };

        ntildel: ntildel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(N) &kp TILDE>;
            label = "NTILDEL";
        };

        md_ibold: md_ibold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp STAR &kp STAR &kp STAR &kp STAR &kp STAR &kp STAR &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT>;
            label = "MD_IBOLD";
        };

        md_bold: md_bold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp STAR &kp STAR &kp STAR &kp STAR &kp LEFT_ARROW &kp LEFT>;
            label = "MD_BOLD";
        };

        md_italic: md_italic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp STAR &kp STAR &kp LEFT>;
            label = "MD_ITALIC";
        };

        md_score: md_score {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp U &kp GT &kp LT &kp FSLH &kp U &kp GT &kp LEFT_ARROW &kp LEFT &kp LEFT_ARROW &kp LEFT>;
            label = "MD_SCORE";
        };

        md_strike: md_strike {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp TILDE &kp TILDE &kp TILDE &kp LEFT_ARROW &kp LEFT>;
            label = "MD_STRIKE";
        };

        md_h4: md_h4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LS(G) &kp LS(O) &kp ENTER &kp POUND &kp POUND &kp POUND &kp POUND &kp SPACE>;
            label = "MD_H4";
        };

        md_h3: md_h3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LS(G) &kp LS(O) &kp POUND &kp POUND &kp POUND &kp SPACE>;
            label = "MD_H3";
        };

        md_h2: md_h2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LS(G) &kp LS(O) &kp POUND &kp POUND &kp SPACE>;
            label = "MD_H2";
        };

        md_toc: md_toc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LS(G) &kp LS(O) &kp RET &kp LBKT &kp SPACE &kp LS(T) &kp LS(O) &kp LS(C) &kp SPACE &kp LBRC &kp SPACE>;
            label = "MD_TOC";
        };

        md_h1: md_h1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp ESCAPE &kp LS(G) &kp LS(G) &kp LS(O) &kp RET &kp RET &kp RET &kp LS(E) &kp N &kp T &kp R &kp Y &kp COLON &kp SPACE &kp STAR &kp STAR &kp LA(D) &kp SPACE &kp LA(T) &kp STAR &kp STAR &kp CARET &kp CARET &kp POUND &kp SPACE>;
            label = "MD_H1";
        };

        quotes: quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
            label = "QUOTES";
        };

        parens: parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PARENS";
        };

        braces: braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC &kp LEFT>;
            label = "BRACES";
        };

        brackets: brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RIGHT_BRACKET &kp LEFT>;
            label = "BRACKETS";
        };

        dquotes: dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
            label = "DQUOTES";
        };

        ticks: ticks {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
            label = "TICKS";
        };

        range: range {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT>;
            label = "RANGE";
        };

        emacronu: emacronu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(E)) &kp GT>;
            label = "EMACRONU";
        };

        sign: sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(K) &kp I &kp R &kp K &kp SPACE &kp LS(R) &kp O &kp Y &kp B &kp A &kp L>;
            label = "SIGN";
        };

        pregunta: pregunta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(QMARK) &kp QMARK>;
            label = "PREGUNTA";
        };

        md_warning: md_warning {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(W) &kp LS(A) &kp LS(R) &kp LS(N) &kp LS(I) &kp LS(N) &kp LS(G) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_WARNING";
        };

        md_example: md_example {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(E) &kp LS(X) &kp LS(A) &kp LS(M) &kp LS(P) &kp LS(L) &kp LS(E) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_EXAMPLE";
        };

        md_question: md_question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(Q) &kp LS(U) &kp LS(E) &kp LS(S) &kp LS(T) &kp LS(I) &kp LS(O) &kp LS(N) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_QUESTION";
        };

        md_success: md_success {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(S) &kp LS(U) &kp LS(C) &kp LS(C) &kp LS(E) &kp LS(S) &kp LS(S) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_SUCCESS";
        };

        md_fail: md_fail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(F) &kp LS(A) &kp LS(I) &kp LS(L) &kp LS(U) &kp LS(R) &kp LS(E) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_FAIL";
        };

        md_danger: md_danger {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(D) &kp LS(A) &kp LS(N) &kp LS(G) &kp LS(E) &kp LS(R) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_DANGER";
        };

        md_quote: md_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(Q) &kp LS(U) &kp LS(O) &kp LS(T) &kp LS(E) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_QUOTE";
        };

        md_todo: md_todo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(T) &kp LS(O) &kp LS(D) &kp LS(O) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_TODO";
        };

        md_note: md_note {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(N) &kp LS(O) &kp LS(T) &kp LS(E) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_NOTE";
        };

        md_info: md_info {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(I) &kp LS(N) &kp LS(F) &kp LS(O) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_INFO";
        };

        md_bug: md_bug {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(B) &kp LS(U) &kp LS(G) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_BUG";
        };

        md_tip: md_tip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp LBKT &kp EXCL &kp LS(T) &kp LS(I) &kp LS(P) &kp RIGHT_BRACKET &kp SPACE &kp LG(MINUS) &kp MINUS &kp MINUS &kp SPACE>;
            label = "MD_TIP";
        };

        md_img: md_img {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp LBKT &kp PIPE &kp N3 &kp N5 &kp N0 &kp RIGHT_BRACKET &kp LPAR &kp RPAR &kp HOME &kp RIGHT_ARROW &kp RIGHT>;
            label = "MD_IMG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5  &to 5                                                    &mo 5      &kp N6  &kp N7  &kp N8     &kp N9     &kp N0     &kp MINUS
&kp TAB    &kp Q      &kp W      &kp E     &kp R      &kp T   &to 2                                                    &mo 2      &kp Y   &kp U   &kp I      &kp O      &kp P      &kp BSLH
&kp ESC    &kp A      &kp S      &kp D     &kp F      &kp G   &mo 4     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &mo 4      &kp H   &kp J   &kp K      &kp L      &kp SEMI   &kp SQT
&kp Z      &kp LSHFT  &kp X      &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp M   &kp COMMA  &kp DOT    &kp RSHFT  &kp SLASH
&kp LGUI   &kp LC(C)  &kp LC(V)  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp GRAVE  &to 1      &kp RGUI
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1           &kp N2           &kp N3           &kp N4           &kp N5           &to 5                                                                   &to 0      &kp N6           &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MINUS  &kp KP_MULTIPLY
&kp TAB    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &none                                                                   &none      &kp KP_NUMBER_6  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_PLUS   &kp KP_DIVIDE
&kp ESC    &kp A            &kp B            &kp C            &kp D            &kp E            &none      &kp LCTRL      &kp LALT      &kp LGUI   &kp RCTRL            &none      &kp H            &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS   &kp KP_ENTER
&none      &none            &kp F            &none            &none            &none                                      &kp HOME      &kp PG_UP                                  &kp N            &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER  &kp KP_ENTER
&kp LGUI   &kp LC(C)        &kp LC(V)        &kp LEFT         &kp RIGHT                         &kp ENTER  &kp BACKSPACE  &kp END       &kp PG_DN  &mt DEL KP_NUMBER_0  &kp KP_N0                   &kp UP      &kp DOWN      &kp KP_DOT     &to 2         &kp RGUI
            >;
        };

        fn {
            bindings = <
&kp F1   &kp F2   &kp F3    &kp F4        &kp F5     &kp F6     &tog 5                                      &mo 0   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp F16  &kp F20  &c_ul     &kp UP_ARROW  &c_ur      &c_ur      &none                                       &none   &trans  &trans  &trans  &trans   &trans   &kp F24
&kp F15  &kp F19  &kp LEFT  &trans        &kp RIGHT  &kp RIGHT  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &kp F23
&kp F14  &kp F18  &c_dl     &kp DOWN      &c_dr      &none                      &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &kp F22
&kp F13  &kp F17  &c_dl     &kp DOWN      &c_dr                 &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &to 3    &kp F21
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &to 4  &none
            >;
        };

        utf8 {
            bindings = <
&md_ibold   &md_fail       &md_bug        &quotes    &md_bold    &emacronu  &to 5                                            &to 0     &trans       &trans     &trans    &trans        &trans     &md_h4
&md_italic  &md_quote      &md_warning    &parens    &ticks      &md_todo   &trans                                           &trans    &trans       &uumlautl  &md_info  &oumlautl     &md_tip    &md_h2
&md_bold    &aumlautl      &ss            &braces    &range      &trans     &trans       &trans  &trans      &trans  &trans  &trans    &hoplophobe  &trans     &sign     &md_danger    &trans     &md_h1
&md_score   &trans         &md_example    &brackets  &md_strike  &trans                          &trans      &trans                    &ntildel     &md_img    &trans    &md_question  &pregunta  &md_h3
&md_strike  &kp LC(LS(C))  &kp LC(LS(V))  &dquotes   &md_score              &md_success  &trans  &trans      &trans  &trans  &md_note               &trans     &trans    &trans        &to 5      &md_toc
            >;
        };

        layers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &to 0                                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &to 0   &to 1   &to 2   &to 3   &to 4   &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &to 0   &trans
            >;
        };
    };
};
